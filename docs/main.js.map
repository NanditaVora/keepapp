{"version":3,"sources":["./src/app/editnote/editnote.component.ts","./src/app/note/note.component.html","./src/app/note-view/note-view.component.html","./src/app/note/note.component.ts","./src/app/services/route.service.ts","./src/environments/environment.ts","./src/app/guards/can-activate.guard.ts","./src/app/note-taker/note-taker.component.ts","./src/app/note-view/note-view.component.ts","./src/app/models/note.ts","./src/app/dashboard/dashboard.component.ts","./src/app/app.component.ts","./src/app/services/note.service.ts","./src/app/note-taker/note-taker.component.html","./src/app/login/login.component.html","./src/app/app.module.ts","./src/app/header/header.component.html","./src/app/services/authentication.service.ts","./src/app/header/header.component.ts","./src/app/edit-note-opener/edit-note-opener.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/directives/font-color.directive.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/editnote/editnote.component.html","./src/app/app.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EditNoteOpenerComponent } from '../edit-note-opener/edit-note-opener.component';\r\nimport { Note } from '../models/note';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { NoteService } from '../services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-editnote',\r\n  templateUrl: './editnote.component.html',\r\n  styleUrls: ['./editnote.component.css']\r\n})\r\nexport class EditnoteComponent implements OnInit {\r\n\r\n  note: Note;\r\n  errorMessage: string = '';\r\n\r\n  constructor(private noteService: NoteService,\r\n    private authService: AuthenticationService,\r\n    private dialogRef: MatDialogRef<EditnoteComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.note =  this.noteService.getNoteById(this.data.noteId)\r\n  }\r\n\r\n  saveNote(){\r\n    this.noteService.editNote(this.note, this.authService.getToken())\r\n    .subscribe(\r\n      response=>{\r\n        console.log('note updated')\r\n        this.dialogRef.close();\r\n      },\r\n      error=>{\r\n        this.errorMessage = error;\r\n      }\r\n    )\r\n  }\r\n}\r\n","<mat-card (click)=\"openEditView()\" appFontColor=\"darkblue\"  >\r\n    <mat-card-header>\r\n      <mat-card-title>\r\n        {{note.title}}\r\n      </mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n        {{note.text}}\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-icon-button color=\"primary\" >\r\n        <mat-icon>delete</mat-icon>\r\n      </button>\r\n    </mat-card-actions>\r\n  </mat-card>  ","<app-note [note] = note *ngFor=\"let note of notes\"></app-note>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Note } from '../models/note';\r\nimport { RouteService } from '../services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-note',\r\n  templateUrl: './note.component.html',\r\n  styleUrls: ['./note.component.css']\r\n})\r\nexport class NoteComponent implements OnInit {\r\n\r\n  @Input()\r\n  note: Note;\r\n\r\n  constructor(private routeService: RouteService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  openEditView(){\r\n    //route to edit note opener component\r\n    this.routeService.toEditNote(this.note.id);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Location } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteService {\r\n\r\n  constructor(private router: Router,\r\n    private location: Location) { }\r\n\r\n  toHome(username: string){\r\n    this.router.navigate(['home',{\r\n      \"userid\": username\r\n    }],\r\n    {\r\n      queryParams:{\r\n        \"loginTime\": new Date().toTimeString()\r\n      }\r\n    })\r\n  }\r\n\r\n  toLogin(){\r\n    this.router.navigate(['login'])\r\n  }\r\n\r\n  toEditNote(noteId: number){\r\n    this.router.navigate(['home',\r\n    {\r\n      outlets:{\r\n        editOutlet: [noteId,'edit']\r\n      }\r\n    }])\r\n  }\r\n\r\n  toPrevious(){\r\n    this.location.back();\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  news_api: 'http://localhost:3001/notes'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { RouteService } from '../services/route.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthenticationService, private routeService: RouteService){}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n      this.authService.isUserAuthenticated(this.authService.getToken())\r\n      .then\r\n      (data=>{\r\n        if(!data)\r\n          {\r\n            this.routeService.toLogin();\r\n            return false;\r\n          }\r\n          else\r\n          {\r\n            return true;\r\n          }\r\n      })\r\n      .catch(\r\n        error=>{\r\n          console.log(error);\r\n          return false;\r\n        }\r\n      )\r\n      return true;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Note } from '../models/note';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { NoteService } from '../services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-note-taker',\r\n  templateUrl: './note-taker.component.html',\r\n  styleUrls: ['./note-taker.component.css']\r\n})\r\nexport class NoteTakerComponent implements OnInit {\r\n\r\n  note: Note = new Note();\r\n  notes : Array<Note> = [];\r\n  errorMessage: string = \"\";\r\n\r\n  constructor(private noteService: NoteService, private authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  addNote(){\r\n    this.noteService.addNote(this.note, this.authService.getToken())\r\n    .subscribe(response=>{\r\n      this.notes.push(response);\r\n      console.log(this.notes);\r\n      this.note = new Note();\r\n    },  \r\n    error=>{\r\n      if(error.status===404)\r\n        console.log('Resource Not Found')\r\n      else if(error.status===403)\r\n        console.log('Access Denied')\r\n      else if(error.status===401)\r\n        console.log('Unauthorized')\r\n      else\r\n        console.log('Unable to Process the Request Now, please try again later');\r\n    })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Note } from '../models/note';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { NoteService } from '../services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-note-view',\r\n  templateUrl: './note-view.component.html',\r\n  styleUrls: ['./note-view.component.css']\r\n})\r\nexport class NoteViewComponent implements OnInit {\r\n\r\n  notes: Array<Note> = [{\r\n    \"id\":1,\r\n    \"title\":\"first note\",\r\n    \"text\": \"first note text\"\r\n  }];\r\n\r\n  constructor(private noteService: NoteService, private authService: AuthenticationService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n//     this.noteService.getNotes(this.authService.getToken())\r\n//     .subscribe(response=>{\r\n//       this.notes = response\r\n//     },\r\n//     error=>{\r\n//       if(error.status===404)\r\n//         console.log('Resource Not Found')\r\n//       else if(error.status===403)\r\n//         console.log('Access Denied')\r\n//       else if(error.status===401)\r\n//         console.log('Unauthorized')\r\n//       else\r\n//         console.log('Unable to Process the Request Now, please try again later');\r\n//     })\r\n  }\r\n\r\n}\r\n","export class Note {\r\n    id: number;\r\n    title: string;\r\n    text: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Note } from '../models/note';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { NoteService } from '../services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  errorMessage: string = \"\";\r\n\r\n  notes: Array<Note> = [];\r\n\r\n  note : Note = new Note();\r\n\r\n  constructor(private activeRoute: ActivatedRoute\r\n    ){}\r\n\r\n  validate(event){\r\n    console.log(event);\r\n    if(event.target.value.length < 6){\r\n      // this.textColor = \"red\"\r\n      this.errorMessage = 'Title should be of minimum 6 characters long';\r\n    }\r\n    else{\r\n      this.errorMessage=''\r\n      // this.textColor = \"lightgreen\"\r\n    }\r\n  }\r\nloggedInName: string = '';\r\nloggedInTime: string = '';\r\n\r\nbackground: string;\r\n\r\n  ngOnInit(){\r\n\r\n    this.activeRoute.params.subscribe(\r\n      param=>{\r\n        this.loggedInName = param['userid']\r\n      }\r\n    )\r\n\r\n    this.activeRoute.queryParams.subscribe(\r\n      param=>{\r\n        this.loggedInTime = param['loginTime']\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  \r\n\r\n  // deleteNote(noteId: Number){\r\n  //   this.noteService.deleteNote(noteId)\r\n  //   .subscribe(\r\n  //     response=>{\r\n  //       console.log('record deleted')\r\n  //       let noteIndex = this.notes.indexOf(this.note);\r\n  //       this.notes.splice(noteIndex,1)\r\n  //     }\r\n  //   ),\r\n  //   error=>{\r\n  //     if(error.status===404)\r\n  //     console.log('Resource Not Found')\r\n  //   else if(error.status===403)\r\n  //     console.log('Access Denied')\r\n  //   else if(error.status===401)\r\n  //     console.log('Unauthorized')\r\n  //   else\r\n  //     console.log('Unable to Process the Request Now, please try again later');\r\n  //   }\r\n  // }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Note } from './models/note';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { NoteService } from './services/note.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  \r\n  textColor: string = \"white\";\r\n  \r\n\r\n  // onChangeTitle(event){\r\n  //   this.note.title = event.target.value;\r\n  // }\r\n  \r\n  // onChangeText(event){\r\n  //   this.note.text = event.target.value;\r\n  // }\r\n\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Note } from '../models/note';\r\nimport { AuthenticationService } from './authentication.service';\r\n\r\n@Injectable()\r\nexport class NoteService {\r\n\r\n  // http://localhost:3000/api/v1/notes\r\n  notes: Array<Note>=[];\r\n  noteSubject : BehaviorSubject<Array<Note>> = new BehaviorSubject(this.notes);\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private authService: AuthenticationService\r\n    ) {\r\n      console.log(environment.news_api)\r\n    this.httpClient.get<Array<Note>>(environment.news_api,{\r\n      headers: new HttpHeaders().set('Authorization',`Bearer ${this.authService.getToken()}`)\r\n    }).subscribe(\r\n      response=>{\r\n        this.notes = response;\r\n        this.noteSubject.next(this.notes);\r\n      }\r\n    )\r\n  }\r\n\r\n  addNote(note: Note, token: string) : Observable<Note>{\r\n    return this.httpClient.post<Note>('http://localhost:3000/api/v1/notes',note,{\r\n      headers: new HttpHeaders().set('Authorization',`Bearer ${token}`)\r\n    })\r\n    .pipe(tap(\r\n      response=>{\r\n        this.notes.push(response);\r\n        this.noteSubject.next(this.notes);\r\n      }\r\n    ))\r\n  }\r\n\r\n  getNotes(token: string) : Observable<Array<Note>>{\r\n    console.log(token)\r\n    return this.noteSubject;\r\n  }\r\n\r\n  getNoteById(noteId: number): Note{\r\n    const note = this.notes.find(n => n.id === noteId)\r\n    return Object.assign({},note);\r\n\r\n  }\r\n\r\n  deleteNote(noteId: Number) {\r\n    return this.httpClient.delete('http://localhost:3000/notes/'+noteId)\r\n  }\r\n\r\n  editNote(note: Note, token: string) : Observable<Note>{\r\n    return this.httpClient.put<Note>(`http://localhost:3000/api/v1/notes/${note.id}`,note,{\r\n      headers: new HttpHeaders().set('Authorization',`Bearer ${token}`)\r\n    })\r\n    .pipe(tap(\r\n      response=>{\r\n        const note = this.notes.find(n => n.id === response.id)\r\n        Object.assign(note,response);\r\n        this.noteSubject.next(this.notes);\r\n      }\r\n    ))\r\n  }\r\n}\r\n","<mat-expansion-panel >\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        Add Note\r\n      </mat-panel-title>\r\n    </mat-expansion-panel-header>\r\n    <div>\r\n      <!-- Note Title: <input (change)=\"onChangeTitle($event)\" [value]=\"note.title\" [style.background-color]=\"textColor\" type=\"text\" > -->\r\n      <mat-form-field>\r\n        <input matInput [(ngModel)]=\"note.title\" placeholder=\"Note Title\" type=\"text\" >\r\n      </mat-form-field>\r\n      <br/>\r\n      \r\n      {{errorMessage}}\r\n    </div>\r\n    <div>\r\n      <!-- Note Text: <textarea (change)=\"onChangeText($event)\" [value]=\"note.text\" ></textarea> -->\r\n      <mat-form-field>\r\n        <textarea matInput [(ngModel)]=\"note.text\" placeholder=\"Note Text\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\" (click)=\"addNote()\">Done</button>\r\n    </div>\r\n  </mat-expansion-panel>\r\n","<!-- <p>login works!</p> -->\r\n<small class='errorMessage'>{{errorMessage}}</small>\r\n<form [formGroup]=\"loginForm\">\r\n    <div>\r\n        <input type=\"text\" formControlName=\"username\" placeholder=\"username\">\r\n        <small>\r\n            {{getUserNameErrorMessage()}}\r\n        </small>\r\n    </div>\r\n\r\n    <div>\r\n        <!-- <hidden></hidden> -->\r\n        <input type=\"text\" formControlName=\"password\" placeholder=\"password\">\r\n        <small>\r\n            {{getPasswordErrorMessage()}}\r\n        </small>\r\n    </div>\r\n\r\n    <div>\r\n        <button [disabled]=loginForm.invalid (click)=\"login()\">Login</button>\r\n    </div>\r\n\r\n</form>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n//for toolbar component\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n\r\n//for expansion panel component\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\n//for card\r\nimport { MatCardModule } from '@angular/material/card';\r\n\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NoteService } from './services/note.service';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FontColorDirective } from './directives/font-color.directive';\r\nimport { BackgroundDirective } from './directives/background.directive';\r\nimport { NoteTakerComponent } from './note-taker/note-taker.component';\r\nimport { NoteViewComponent } from './note-view/note-view.component';\r\nimport { NoteComponent } from './note/note.component';\r\nimport { EditNoteOpenerComponent } from './edit-note-opener/edit-note-opener.component';\r\nimport { EditnoteComponent } from './editnote/editnote.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    DashboardComponent,\r\n    FontColorDirective,\r\n    BackgroundDirective,\r\n    NoteTakerComponent,\r\n    NoteViewComponent,\r\n    NoteComponent,\r\n    EditNoteOpenerComponent,\r\n    EditnoteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatExpansionModule,\r\n    MatCardModule,\r\n    FormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    HttpClientModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule\r\n  ],\r\n  providers: [NoteService],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [EditnoteComponent]\r\n})\r\nexport class AppModule { }\r\n","<mat-toolbar color=\"primary\">Keep App</mat-toolbar>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  validateUser(user):Observable<Object>{\r\n    return this.httpClient.post('http://localhost:3000/auth/v1',user);\r\n  }\r\n\r\n  setToken(token: string):void{\r\n    localStorage.setItem('authToken',token)\r\n  }\r\n\r\n  getToken(): string{\r\n    return localStorage.getItem('authToken')\r\n  }\r\n\r\n  removeToken(): void{\r\n    localStorage.removeItem('authToken')\r\n  }\r\n\r\n  isUserAuthenticated(token: string):Promise<boolean>{\r\n    return this.httpClient.post(`http://localhost:3000/auth/v1/isAuthenticated`,{},{\r\n      headers: new HttpHeaders().set('Authorization',`Bearer ${token}`)\r\n    })\r\n    .pipe(map(response=>response[\"isAuthenticated\"])).toPromise(); \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EditnoteComponent } from '../editnote/editnote.component';\r\nimport { RouteService } from '../services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-note-opener',\r\n  templateUrl: './edit-note-opener.component.html',\r\n  styleUrls: ['./edit-note-opener.component.css']\r\n})\r\nexport class EditNoteOpenerComponent implements OnInit {\r\n\r\n  constructor(private dialog: MatDialog, private activeRoute : ActivatedRoute, \r\n    private routeService: RouteService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dialog.open(EditnoteComponent,\r\n      {\r\n        data: {\r\n          noteId : +this.activeRoute.snapshot.paramMap.get('noteId')\r\n        }\r\n      })\r\n      .afterClosed()\r\n      .subscribe(\r\n        data=>{\r\n          this.routeService.toPrevious();\r\n        }\r\n      )\r\n      ;\r\n  }\r\n\r\n}\r\n","Welcome {{loggedInName}}... You have logged in at : {{loggedInTime}}\r\n\r\n<app-note-taker></app-note-taker>\r\n\r\n<router-outlet></router-outlet>\r\n<router-outlet name=\"editOutlet\"></router-outlet>\r\n\r\n  <h4>Choose Background Color</h4>\r\n  <div>\r\n    <input type=\"radio\" name=\"colors\" (click)=\"background='lightgreen'\">Green\r\n    <input type=\"radio\" name=\"colors\" (click)=\"background='lightyellow'\">Yellow\r\n    <input type=\"radio\" name=\"colors\" (click)=\"background='lightcyan'\">Cyan\r\n  </div>\r\n<!-- {{background}} -->\r\n  \r\n  \r\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appFontColor]'\r\n})\r\nexport class FontColorDirective {\r\n\r\n  @Input()\r\n  appFontColor: string;\r\n\r\n  constructor(private element: ElementRef) {\r\n    \r\n  }\r\n\r\n  @HostListener('mouseover')\r\n  onEnter(){\r\n    this.element.nativeElement.style.color = this.appFontColor;\r\n  }\r\n\r\n  @HostListener('mouseout')\r\n  onExit(){\r\n    this.element.nativeElement.style.color = \"black\";\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditNoteOpenerComponent } from './edit-note-opener/edit-note-opener.component';\r\nimport { CanActivateGuard } from './guards/can-activate.guard';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { NoteViewComponent } from './note-view/note-view.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: DashboardComponent,\r\n    canActivate: [CanActivateGuard],\r\n    children:[\r\n      {\r\n        path: 'notes',\r\n        component: NoteViewComponent\r\n      },\r\n      {\r\n        path: ':noteId/edit',\r\n        component: EditNoteOpenerComponent,\r\n        outlet: 'editOutlet'\r\n      },\r\n      {\r\n        path: '',\r\n        redirectTo: 'notes',\r\n        pathMatch: 'full'\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    path: '',\r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { RouteService } from '../services/route.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthenticationService,\r\n    private routeService: RouteService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  errorMessage: string;\r\n\r\n  loginForm = new FormGroup(\r\n    {\r\n      username: new FormControl('',[Validators.required]),\r\n      password: new FormControl('',[Validators.required, Validators.minLength(6)])\r\n    }\r\n  )\r\n\r\n  login(){\r\n    console.log('logging in....')\r\n    console.log(this.loginForm.value);\r\n    // console.log(this.getUsername())\r\n    // console.log(this.getPassword())\r\n\r\n    this.authService.validateUser(this.loginForm.value)\r\n      .subscribe(data=>{\r\n        console.log('success')\r\n        console.log(data['token'])\r\n        this.authService.setToken(data['token'])\r\n        this.routeService.toHome(this.getUsername().value);\r\n      },\r\n      error=>{\r\n        console.log(error)\r\n        this.errorMessage = 'Unauthorized'\r\n      }\r\n      )\r\n  }\r\n\r\n  getUsername()\r\n  {\r\n    return this.loginForm.get('username');\r\n  }\r\n\r\n  getPassword(){\r\n    return this.loginForm.get('password');\r\n  }\r\n  getUserNameErrorMessage(){\r\n    if(this.getUsername().invalid && (this.getUsername().dirty || this.getUsername().touched))\r\n      return 'Username should not be left blank'\r\n    else\r\n      return ''\r\n\r\n  }\r\n\r\n  getPasswordErrorMessage(){\r\n    if(this.getPassword().invalid && (this.getPassword().dirty || this.getPassword().touched))\r\n      if(this.getPassword().hasError('required'))\r\n        return 'Password should not be left blank'\r\n      else if(this.getPassword().hasError('minlength'))\r\n        return 'Password should be atleast 6 characters long'\r\n    else\r\n      return ''\r\n  }\r\n}\r\n","\r\n<div>\r\n    <!-- Note Title: <input (change)=\"onChangeTitle($event)\" [value]=\"note.title\" [style.background-color]=\"textColor\" type=\"text\" > -->\r\n    <mat-form-field>\r\n      <input matInput [(ngModel)]=\"note.title\" placeholder=\"Note Title\" type=\"text\" >\r\n    </mat-form-field>\r\n    <br/>\r\n    \r\n    {{errorMessage}}\r\n  </div>\r\n  <div>\r\n    <!-- Note Text: <textarea (change)=\"onChangeText($event)\" [value]=\"note.text\" ></textarea> -->\r\n    <mat-form-field>\r\n      <textarea matInput [(ngModel)]=\"note.text\" placeholder=\"Note Text\"></textarea>\r\n    </mat-form-field>\r\n  </div>\r\n  <div>\r\n    <button type=\"submit\" (click)=\"saveNote()\">Done</button>\r\n  </div>","<app-header>\r\n\r\n</app-header>\r\n\r\n<div style=\"margin:10px\">\r\n  <h4><a routerLink=\"/home\" routerLinkActive>Home</a> | \r\n    <a routerLink=\"/login\" routerLinkActive>Login</a> </h4>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<!-- <app-login>\r\n  \r\n</app-login>\r\n\r\n<app-dashboard>\r\n\r\n</app-dashboard> -->","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}